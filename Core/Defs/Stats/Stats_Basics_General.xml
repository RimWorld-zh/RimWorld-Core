<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <StatDef>
    <defName>MaxHitPoints</defName>
    <label>max hit points</label>
    <description>The maximum hit points of an object. This represents how much damage it can take before being destroyed.</description>
    <category>BasicsNonPawn</category>
    <defaultBaseValue>100</defaultBaseValue>
    <minValue>1</minValue>
    <roundValue>true</roundValue>
    <toStringStyle>Integer</toStringStyle>
    <roundToFiveOver>200</roundToFiveOver>
		<showNonAbstract>false</showNonAbstract>
		<scenarioRandomizable>true</scenarioRandomizable>
	</StatDef>
  
  <StatDef>
    <defName>Mass</defName>
    <label>mass</label>
    <description>The physical mass of an object.</description>
    <category>Basics</category>
    <defaultBaseValue>1</defaultBaseValue>
    <minValue>0</minValue>
    <toStringStyle>FloatTwoOrThree</toStringStyle>
    <formatString>{0} kg</formatString>
    <minifiedThingInherits>true</minifiedThingInherits>
    <parts>
      <li Class="StatPart_BodySize" />
      <li Class="StatPart_NaturalNotMissingBodyPartsCoverage" />
      <li Class="StatPart_GearAndInventoryMass" />
      <li Class="StatPart_UnfinishedThingIngredientsMass" />
      <li Class="StatPart_AddedBodyPartsMass" />
    </parts>
  </StatDef>

  <StatDef>
    <defName>MarketValue</defName>
    <workerClass>StatWorker_MarketValue</workerClass>
    <label>market value</label>
    <description>The market value of an object. The actual trade price will be adjusted by negotiation skill, relationship status, and other contextual factors.</description>
    <category>BasicsNonPawn</category>
    <minValue>0</minValue>
    <toStringStyle>FloatTwo</toStringStyle>
    <roundToFiveOver>200</roundToFiveOver>
    <formatString>${0}</formatString>
    <minifiedThingInherits>true</minifiedThingInherits>
    <parts>
      <li Class="StatPart_Quality">
        <factorAwful>0.5</factorAwful>
        <factorPoor>0.75</factorPoor>
        <factorNormal>1</factorNormal>
        <factorGood>1.25</factorGood>
        <factorExcellent>1.5</factorExcellent>
        <factorMasterwork>2.5</factorMasterwork>
        <factorLegendary>6</factorLegendary>
      </li>
      <li Class="StatPart_Health">
        <curve>
          <points>
            <li>(0,0)</li>
            <li>(0.3,0.04)</li>
            <li>(0.9,1)</li>
          </points>
        </curve>
      </li>
			<li Class="StatPart_WornByCorpse"/>
    </parts>
		<scenarioRandomizable>true</scenarioRandomizable>
	</StatDef>

  <StatDef>
    <defName>SellPriceFactor</defName>
    <label>sell price multiplier</label>
    <description>A multiplier on the price at which you can sell items.</description>
    <category>BasicsNonPawn</category>
    <showIfUndefined>false</showIfUndefined>
    <defaultBaseValue>1</defaultBaseValue>
    <minValue>0</minValue>
    <toStringStyle>PercentZero</toStringStyle>
  </StatDef>
  
  <StatDef>
    <defName>Flammability</defName>
    <label>flammability</label>
    <description>How easily an object catches fire and how quickly a fire will grow as it burns.</description>
    <category>BasicsNonPawn</category>
    <defaultBaseValue>0</defaultBaseValue>
    <minValue>0</minValue>
    <!-- Normalize to: 1 is wood, 0 is stone, 2 is like dry wispy paper or volatile fuel.-->
    <maxValue>2</maxValue>
    <toStringStyle>PercentZero</toStringStyle>
		<scenarioRandomizable>true</scenarioRandomizable>
	</StatDef>

  <StatDef>
    <defName>WorkToMake</defName>
    <label>work to make</label>
    <description>The base amount of work it takes to make an item, once all materials are gathered.</description>
    <category>BasicsNonPawn</category>
    <defaultBaseValue>1</defaultBaseValue>
    <minValue>0</minValue>
    <toStringStyle>WorkAmount</toStringStyle>
    <roundToFiveOver>300</roundToFiveOver>
    <showIfUndefined>false</showIfUndefined>
		<scenarioRandomizable>true</scenarioRandomizable>
	</StatDef>

	<StatDef>
		<defName>WorkToBuild</defName>
		<label>work to build</label>
		<description>The base amount of work it takes to build a structure, once all materials are gathered.</description>
		<category>BasicsNonPawn</category>
		<defaultBaseValue>1</defaultBaseValue>
		<minValue>0</minValue>
		<toStringStyle>WorkAmount</toStringStyle>
		<roundToFiveOver>300</roundToFiveOver>
		<showIfUndefined>false</showIfUndefined>
		<scenarioRandomizable>true</scenarioRandomizable>
	</StatDef>

  <StatDef>
    <defName>DeteriorationRate</defName>
    <label>deterioration rate</label>
    <description>The rate at which this item deteriorates when left outside, in average hit points of damage per day. Deterioration rate is also affected by things like weather, roofs, toxic fallout, or being left in shallow water.</description>
    <category>BasicsNonPawn</category>
    <showIfUndefined>false</showIfUndefined>
    <defaultBaseValue>0</defaultBaseValue>
    <minValue>0</minValue>
    <toStringStyle>FloatTwo</toStringStyle>
    <formatString>{0} / day</formatString>
		<parts>
			<li Class="StatPart_Quality">
				<factorAwful>2</factorAwful>
				<factorPoor>1.5</factorPoor>
				<factorNormal>1</factorNormal>
				<factorGood>0.8</factorGood>
				<factorExcellent>0.6</factorExcellent>
				<factorMasterwork>0.3</factorMasterwork>
				<factorLegendary>0.1</factorLegendary>
			</li>
		</parts>
		<scenarioRandomizable>true</scenarioRandomizable>
	</StatDef>

  <StatDef>
    <defName>Beauty</defName>
    <label>beauty</label>
    <description>How enjoyable an object is to look at. Beautiful objects fulfill characters' need for beauty.</description>
    <category>BasicsNonPawn</category>
    <defaultBaseValue>0</defaultBaseValue>
    <minValue>-1000</minValue>
    <hideAtValue>0</hideAtValue>
    <roundValue>true</roundValue>
    <toStringStyle>Integer</toStringStyle>
    <roundToFiveOver>100</roundToFiveOver>
    <applyFactorsIfNegative>false</applyFactorsIfNegative>
    <parts>
      <li Class="StatPart_Quality">
        <factorAwful>-0.1</factorAwful>
        <factorPoor>0.5</factorPoor>
        <factorNormal>1</factorNormal>
        <factorGood>2</factorGood>
        <factorExcellent>3</factorExcellent>
        <factorMasterwork>5</factorMasterwork>
        <factorLegendary>8</factorLegendary>
      </li>
    </parts>
  </StatDef>
  
  <StatDef>
    <defName>Cleanliness</defName>
    <label>cleanliness</label>
    <description>How much an object contributes to an area's cleanliness score.</description>
    <category>BasicsNonPawn</category>
    <defaultBaseValue>0</defaultBaseValue>
    <maxValue>1000</maxValue>
    <minValue>-1000</minValue>
    <hideAtValue>0</hideAtValue>
    <toStringStyle>FloatOne</toStringStyle>
    <applyFactorsIfNegative>false</applyFactorsIfNegative>
  </StatDef>

  <StatDef>
    <defName>Comfort</defName>
    <label>comfort</label>
    <description>How comfortable an object is to sit or lay on. Using comfortable objects fulfills a character's need for comfort.</description>
    <category>BasicsNonPawn</category>
    <showIfUndefined>false</showIfUndefined>
    <defaultBaseValue>0</defaultBaseValue>
    <maxValue>1000</maxValue>
    <minValue>-1000</minValue>
    <toStringStyle>FloatTwo</toStringStyle>
    <applyFactorsIfNegative>false</applyFactorsIfNegative>
    <parts>
      <li Class="StatPart_Quality">
        <factorAwful>0.76</factorAwful>
        <factorPoor>0.88</factorPoor>
        <factorNormal>1</factorNormal>
        <factorGood>1.12</factorGood>
        <factorExcellent>1.24</factorExcellent>
        <factorMasterwork>1.45</factorMasterwork>
        <factorLegendary>1.7</factorLegendary>
      </li>
    </parts>
  </StatDef>
  
    <StatDef>
        <defName>Nutrition</defName>
        <label>nutrition</label>
        <description>How nutritious this food is.</description>
        <category>BasicsNonPawn</category>
        <defaultBaseValue>0</defaultBaseValue>
        <minValue>0</minValue>
        <showIfUndefined>false</showIfUndefined>
        <toStringStyle>FloatTwo</toStringStyle>
        <parts>
            <li Class="StatPart_BodySize" />
            <li Class="StatPart_NaturalNotMissingBodyPartsCoverage" />
            <li Class="StatPart_PlantGrowthNutritionFactor" />
            <li Class="StatPart_IsFlesh" />
            <li Class="StatPart_IsCorpseFresh" />
        </parts>
    </StatDef>

    <StatDef>
        <defName>FoodPoisonChanceFixedHuman</defName>
        <label>food poison chance</label>
        <description>The chance this food will cause food poisoning.</description>
        <category>BasicsNonPawn</category>
        <defaultBaseValue>0</defaultBaseValue>
        <minValue>0</minValue>
        <hideAtValue>0</hideAtValue>
        <toStringStyle>PercentZero</toStringStyle>
        <parts>
            <li Class="StatPart_MaxChanceIfRotting" />
        </parts>
    </StatDef>

</Defs>
