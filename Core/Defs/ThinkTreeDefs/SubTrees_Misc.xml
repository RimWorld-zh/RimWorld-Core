<?xml version="1.0" encoding="utf-8" ?>
<ThinkTrees>

  <!--============= Downed ============-->
  
  <ThinkTreeDef>
    <defName>Downed</defName>
    <thinkRoot Class="ThinkNode_ConditionalDowned">
      <subNodes>
        <li Class="JobGiver_IdleForever"/>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>
  
  <!--============= Burning ============-->
  
  <ThinkTreeDef>
		<defName>BurningResponse</defName>
		<thinkRoot Class="ThinkNode_ConditionalBurning">
			<subNodes>
				<li Class="ThinkNode_Priority">
					<subNodes>
						<li Class="JobGiver_ExtinguishSelf" />
						<li Class="JobGiver_RunRandom">
              <maxDanger>Deadly</maxDanger>
            </li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>

  <!--============= Dig out if I can't reach map edge ===========-->
  
  <ThinkTreeDef>
    <defName>DigOutIfCannotReachMapEdge</defName>
    <thinkRoot Class="ThinkNode_ConditionalCannotReachMapEdge">
      <subNodes>
        <li Class="JobGiver_ExitMapBest">
          <defaultLocomotion>Walk</defaultLocomotion>
          <forceCanDig>true</forceCanDig>
          <canBash>true</canBash>
        </li>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>
  
  <!--============= Mental states (critical) ============-->
  
  <ThinkTreeDef>
		<defName>MentalStateCritical</defName>
    <thinkRoot Class="ThinkNode_Priority">
      <subNodes>
		    <li Class="ThinkNode_ConditionalMentalState">
			    <state>Berserk</state>
			    <subNodes>
				    <li Class="ThinkNode_Priority">
					    <subNodes>
						    <li Class="JobGiver_Berserk" />
                <li Class="JobGiver_WanderAnywhere">
                  <maxDanger>Deadly</maxDanger>
                </li>
                </subNodes>
				    </li>
			    </subNodes>
		    </li>
		    <li Class="ThinkNode_ConditionalMentalState">
			    <state>SocialFighting</state>
			    <subNodes>
				    <li Class="ThinkNode_Priority">
					    <subNodes>
						    <li Class="JobGiver_SocialFighting" />
                <li Class="JobGiver_WanderAnywhere">
                  <maxDanger>Deadly</maxDanger>
                </li>
                </subNodes>
				    </li>
			    </subNodes>
		    </li>
      </subNodes>
    </thinkRoot>
	</ThinkTreeDef>


  <!--============= Mental states (non-critical) ============-->

  <ThinkTreeDef>
    <defName>MentalStateNonCritical</defName>
    <thinkRoot Class="ThinkNode_Priority">
      <subNodes>
 
        <!-- Various wanders  -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>WanderPsychotic</state>
          <subNodes>
            <li Class="JobGiver_WanderAnywhere">
              <maxDanger>Deadly</maxDanger>
            </li>
          </subNodes>
        </li>
        <li Class="ThinkNode_ConditionalMentalState">
          <state>WanderSad</state>
          <subNodes>
            <li Class="JobGiver_WanderColony">
              <maxDanger>Deadly</maxDanger>
            </li>
          </subNodes>
        </li>
        <li Class="ThinkNode_ConditionalMentalState">
          <state>WanderConfused</state>
          <subNodes>
            <li Class="JobGiver_WanderAnywhere">
              <maxDanger>Deadly</maxDanger>
            </li>
          </subNodes>
        </li>
        
        <!-- Hide in room -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>WanderOwnRoom</state>
          <subNodes>
            <li Class="JobGiver_WanderOwnRoom">
              <maxDanger>Deadly</maxDanger>
            </li>
          </subNodes>
        </li>
        
        <!-- Binging on drug -->
        <li Class="ThinkNode_ConditionalMentalStates">
          <states>
            <li>BingingDrugMajor</li>
            <li>BingingDrugExtreme</li>
          </states>
          <subNodes>
            <li Class="ThinkNode_PrioritySorter">
              <minPriority>0.5</minPriority>
              <subNodes>
                <li Class="JobGiver_GetFood"/>
                <li Class="JobGiver_GetRest"/>
                <li Class="JobGiver_SatisfyChemicalNeed"/>
                <li Class="ThinkNode_Priority_GetJoy">
                  <subNodes>
                    <li Class="JobGiver_GetJoy"/>
                  </subNodes>
                </li>
              </subNodes>
            </li>
            <li Class="JobGiver_BingeDrug"/>
            <li Class="JobGiver_WanderColony" />
          </subNodes>
        </li>

        <!-- Binging on food -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>BingingFood</state>
          <subNodes>
            <li Class="ThinkNode_PrioritySorter">
              <minPriority>0.5</minPriority>
              <subNodes>
                <li Class="JobGiver_GetFood"/>
                <li Class="JobGiver_GetRest"/>
                <li Class="JobGiver_SatisfyChemicalNeed"/>
                <li Class="ThinkNode_Priority_GetJoy">
                  <subNodes>
                    <li Class="JobGiver_GetJoy"/>
                  </subNodes>
                </li>
              </subNodes>
            </li>
            <li Class="JobGiver_BingeFood"/>
            <li Class="JobGiver_WanderColony" />
          </subNodes>
        </li>
        
        <!-- Manhunter -->
        <!-- Hack: these have to be identical -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>Manhunter</state>
          <subNodes>
            <li Class="ThinkNode_Priority">
              <subNodes>
                <li Class="JobGiver_Manhunter" />
                <li Class="JobGiver_WanderAnywhere">
                  <maxDanger>Deadly</maxDanger>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>
        <li Class="ThinkNode_ConditionalMentalState">
          <state>ManhunterPermanent</state>
          <subNodes>
            <li Class="ThinkNode_Priority">
              <subNodes>
                <li Class="JobGiver_Manhunter" />
                <li Class="JobGiver_WanderAnywhere">
                  <maxDanger>Deadly</maxDanger>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>
        
        <!-- Panic flee -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>PanicFlee</state>
          <subNodes>
            <li Class="JobGiver_ExitMapPanic" />
            <li Class="JobGiver_WanderAnywhere">
              <!-- Can happen if there is no way to exit the map -->
              <maxDanger>Some</maxDanger>
              <locomotionUrgency>Jog</locomotionUrgency>
            </li>
          </subNodes>
        </li>

        <!-- Give up and leave -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>GiveUpExit</state>
          <subNodes>
            <li Class="JobGiver_ExitMapRandom">
              <defaultLocomotion>Walk</defaultLocomotion>
            </li>
            <li Class="JobGiver_WanderAnywhere">
              <maxDanger>Deadly</maxDanger>
            </li>
          </subNodes>
        </li>
          
        <!-- Fire starting spree -->
        <li Class="ThinkNode_ConditionalMentalState">
          <state>FireStartingSpree</state>
          <subNodes>
            <li Class="JobGiver_FireStartingSpree"></li>
          </subNodes>
        </li>
        
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>
 
  <!--============= Animal leave map if out of season ============-->
  
  <ThinkTreeDef>
    <defName>LeaveIfWrongSeason</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
        <li Class="ThinkNode_ConditionalAnimalWrongSeason">
          <subNodes>
            <li Class="JobGiver_ExitMapRandom">
              <defaultLocomotion>Walk</defaultLocomotion>
            </li>
					</subNodes>
				</li>
				<li Class="ThinkNode_ConditionalDangerousTemperature">
					<subNodes>
						<li Class="ThinkNode_ConditionalOutdoorTemperature">
							<subNodes>
								<li Class="JobGiver_ExitMapRandom">
                  <defaultLocomotion>Jog</defaultLocomotion>
                </li>
							</subNodes>
						</li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
  </ThinkTreeDef>
	
	<!--============= Leave map if starving ============-->
  
  <ThinkTreeDef>
    <defName>LeaveIfStarving</defName>
    <thinkRoot Class="ThinkNode_ConditionalStarving">
      <subNodes>
        <li Class="JobGiver_GetFood" /> <!-- One last chance to find some food -->
        <li Class="JobGiver_ExitMapRandom">
          <defaultLocomotion>Walk</defaultLocomotion>
        </li>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef> 

  <!--============= Test of insertion hooks ============-->
  
  <!-- If you remove the comments around this, it will inject
      this AI control node into all ThinkTrees where there is an
      insertion hook seeking a matching InsertTag.
      
      If there are several injections, they'll be ordered by priorty (highest first).
      
      This example just makes colonists beat on each other, but modders
      can add any behavior using these and they'll all work together.-->
  <!--
  <ThinkTreeDef>
    <defName>InsertHookTest</defName>
    <insertTag>Humanlike_PostMentalState</insertTag>
    <insertPriority>100</insertPriority>
    <thinkRoot Class="JobGiver_Berserk" />
  </ThinkTreeDef>
  -->

</ThinkTrees>