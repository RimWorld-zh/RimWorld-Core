<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <!-- affecting opinion -->

  <ThoughtDef>
    <defName>Affair</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Affair</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>affair</label>
        <baseOpinionOffset>-70</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>Incestuous</defName>
    <thoughtClass>Thought_Incestuous</thoughtClass>
    <workerClass>ThoughtWorker_Incestuous</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>incestuous</label>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>Disfigured</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Disfigured</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>disfigured</label>
        <baseOpinionOffset>-15</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>HardWorkerVsLazy</defName>
    <thoughtClass>Thought_HardWorkerVsLazy</thoughtClass>
    <workerClass>ThoughtWorker_HardWorkerVsLazy</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>hard worker vs lazy</label>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>TeetotalerVsChemicalInterest</defName>
    <thoughtClass>Thought_TeetotalerVsChemicalInterest</thoughtClass>
    <workerClass>ThoughtWorker_TeetotalerVsChemicalInterest</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>teetotaler vs chemical interest</label>
      </li>
    </stages>
  </ThoughtDef>

	<ThoughtDef>
		<defName>TeetotalerVsAddict</defName>
		<thoughtClass>Thought_SituationalSocial</thoughtClass>
		<workerClass>ThoughtWorker_TeetotalerVsAddict</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
		<stages>
			<li>
				<label>teetotaler vs addict</label>
				<baseOpinionOffset>-25</baseOpinionOffset>
			</li>
		</stages>
	</ThoughtDef>

	<ThoughtDef>
    <defName>ChemicalInterestVsTeetotaler</defName>
    <thoughtClass>Thought_ChemicalInterestVsTeetotaler</thoughtClass>
    <workerClass>ThoughtWorker_ChemicalInterestVsTeetotaler</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>chemical interest vs teetotaler</label>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>Drunk</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Drunk</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>drunk</label>
        <baseOpinionOffset>-10</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>Pretty</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Pretty</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>pretty</label>
        <baseOpinionOffset>20</baseOpinionOffset>
      </li>
      <li>
        <label>beautiful</label>
        <baseOpinionOffset>40</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>

  <ThoughtDef>
    <defName>Ugly</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Ugly</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>ugly</label>
        <baseOpinionOffset>-20</baseOpinionOffset>
      </li>
      <li>
        <label>staggeringly ugly</label>
        <baseOpinionOffset>-40</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>

  <ThoughtDef>
    <defName>AnnoyingVoice</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_AnnoyingVoice</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>annoying voice</label>
        <baseOpinionOffset>-25</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>

  <ThoughtDef>
    <defName>CreepyBreathing</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_CreepyBreathing</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>creepy breathing</label>
        <baseOpinionOffset>-25</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>
  
  
  <ThoughtDef>
    <defName>Man</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Man</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>man</label>
        <baseOpinionOffset>-25</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>Woman</defName>
    <thoughtClass>Thought_SituationalSocial</thoughtClass>
    <workerClass>ThoughtWorker_Woman</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>woman</label>
        <baseOpinionOffset>-25</baseOpinionOffset>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>ButcheredHumanlikeCorpseOpinion</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>ButcheredHumanlikeCorpse</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>butchered humanlike corpse</label>
        <baseOpinionOffset>-10</baseOpinionOffset>
      </li>
    </stages>
    <nullifyingTraits>
      <li>Cannibal</li>
      <li>Bloodlust</li>
      <li>Psychopath</li>
    </nullifyingTraits>
    <nullifyingOwnTales>
      <li>ButcheredHumanlikeCorpse</li>
      <li>AteRawHumanlikeMeat</li>
    </nullifyingOwnTales>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>AteRawHumanlikeMeat</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>AteRawHumanlikeMeat</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>ate raw humanlike meat</label>
        <baseOpinionOffset>-5</baseOpinionOffset>
      </li>
    </stages>
    <nullifyingTraits>
      <li>Cannibal</li>
    </nullifyingTraits>
    <nullifyingOwnTales>
      <li>ButcheredHumanlikeCorpse</li>
      <li>AteRawHumanlikeMeat</li>
    </nullifyingOwnTales>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>SoldPrisoner</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>SoldPrisoner</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>sold prisoner to slavery</label>
        <baseOpinionOffset>-15</baseOpinionOffset>
      </li>
    </stages>
    <nullifiedIfNotColonist>true</nullifiedIfNotColonist>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>ExecutedPrisoner</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>ExecutedPrisoner</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>executed prisoner</label>
        <baseOpinionOffset>-8</baseOpinionOffset>
      </li>
    </stages>
    <nullifiedIfNotColonist>true</nullifiedIfNotColonist>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>KilledColonist</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>KilledColonist</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>killed colonist</label>
        <baseOpinionOffset>-10</baseOpinionOffset>
      </li>
    </stages>
    <nullifiedIfNotColonist>true</nullifiedIfNotColonist>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>KilledColonyAnimal</defName>
    <thoughtClass>Thought_Tale</thoughtClass>
    <workerClass>ThoughtWorker_Tale</workerClass>
    <taleDef>KilledColonyAnimal</taleDef>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>killed colony animal</label>
        <baseOpinionOffset>-5</baseOpinionOffset>
      </li>
    </stages>
    <nullifiedIfNotColonist>true</nullifiedIfNotColonist>
  </ThoughtDef>
  
  <!-- affecting mood -->
  
  <ThoughtDef>
    <defName>OpinionOfMyLover</defName>
    <thoughtClass>Thought_OpinionOfMyLover</thoughtClass>
    <workerClass>ThoughtWorker_OpinionOfMyLover</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <stages>
      <li>
        <label>opinion of my {0} {1}</label>
        <description>Being with my lover makes me feel this way.</description>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>BondedAnimalMaster</defName>
    <workerClass>ThoughtWorker_BondedAnimalMaster</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <nullifyingTraits>
      <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>{0}'s master</label>
        <description>Being together with my bonded animal makes me feel better.</description>
        <baseMoodEffect>5</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>NotBondedAnimalMaster</defName>
    <workerClass>ThoughtWorker_NotBondedAnimalMaster</workerClass>
    <validWhileDespawned>true</validWhileDespawned>
    <nullifyingTraits>
      <li>Psychopath</li>
    </nullifyingTraits>
    <stages>
      <li>
        <label>not {0}'s master</label>
        <description>I should be together with my bonded animal.</description>
        <baseMoodEffect>-3</baseMoodEffect>
      </li>
    </stages>
  </ThoughtDef>
  
  <ThoughtDef>
    <defName>WantToSleepWithSpouseOrLover</defName>
    <thoughtClass>Thought_WantToSleepWithSpouseOrLover</thoughtClass>
    <workerClass>ThoughtWorker_WantToSleepWithSpouseOrLover</workerClass>
    <stages>
      <li>
        <label>want to sleep with {0}</label>
        <description>I don't like sleeping apart from my partner.</description>
      </li>
    </stages>
  </ThoughtDef>
  
</Defs>
